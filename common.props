<Project>

	<Target Name="GetGitHash" BeforeTargets="WriteGitHash" Condition="'$(BuildHash)' == ''">
		<PropertyGroup>
			<!-- temp file for the git version (lives in "obj" folder)-->
			<VerFile>$(IntermediateOutputPath)gitver</VerFile>
		</PropertyGroup>

		<!-- write the hash to the temp file.-->
		<Exec Command="git -C $(ProjectDir) describe --long --always --dirty &gt; $(VerFile)" />

		<!-- read the version into the GitVersion itemGroup-->
		<ReadLinesFromFile File="$(VerFile)">
			<Output TaskParameter="Lines" ItemName="GitVersion" />
		</ReadLinesFromFile>
		<!-- Set the BuildHash property to contain the GitVersion, if it wasn't already set.-->
		<PropertyGroup>
			<BuildHash>@(GitVersion)</BuildHash>
		</PropertyGroup>
	</Target>

	<Target Name="WriteGitHash" BeforeTargets="CoreCompile">
		<!-- names the obj/.../CustomAssemblyInfo.cs file -->
		<PropertyGroup>
			<CustomAssemblyInfoFile>$(IntermediateOutputPath)\CustomAssemblyInfo.cs</CustomAssemblyInfoFile>
		</PropertyGroup>
		<!-- includes the CustomAssemblyInfo for compilation into your project -->
		<ItemGroup>
			<Compile Include="$(CustomAssemblyInfoFile)" />
		</ItemGroup>
		<!-- defines the AssemblyInformationalVersionAttribute attribute that will be written -->
		<ItemGroup>
			<AssemblyAttributes Include="AssemblyInformationalVersionAttribute">
				<_Parameter1>$(BuildHash)</_Parameter1>
			</AssemblyAttributes>
		</ItemGroup>
		<!-- writes the attribute to the customAssemblyInfo file -->
		<WriteCodeFragment Language="C#" OutputFile="$(CustomAssemblyInfoFile)" AssemblyAttributes="@(AssemblyAttributes)" />
	</Target>

	<PropertyGroup>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
	</PropertyGroup>

	<PropertyGroup>
		<GitHeadSha>$(GitHeadSha)</GitHeadSha>
		<DotGitDir>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)../../.git'))</DotGitDir>
		<HeadFileContent Condition="Exists('$(DotGitDir)/HEAD')">$([System.IO.File]::ReadAllText('$(DotGitDir)/HEAD').Trim())</HeadFileContent>
		<RefPath Condition="$(HeadFileContent.StartsWith('ref: '))">$(DotGitDir)/$(HeadFileContent.Substring(5))</RefPath>
		<GitHeadSha Condition="'$(RefPath)' != '' AND Exists('$(RefPath)')">$([System.IO.File]::ReadAllText('$(RefPath)').Trim())</GitHeadSha>
		<GitHeadSha Condition="'$(HeadFileContent)' != '' AND '$(RefPath)' == ''">$(HeadFileContent)</GitHeadSha>
	</PropertyGroup>

	<PropertyGroup Condition="'$(GitHeadSha)' != ''">
		<CommitHash>$(GitHeadSha)</CommitHash>
	</PropertyGroup>

	<PropertyGroup Label="Signing">
		<!-- <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)common/Build.snk</AssemblyOriginatorKeyFile> -->
		<!-- <SignAssembly>true</SignAssembly> -->
		<!-- <PublicSign Condition="'$(OS)' != 'Windows_NT'">true</PublicSign> -->
	</PropertyGroup>

</Project>
